document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("loginForm"),e=document.getElementById("registerForm"),n=document.getElementById("noteForm"),o=document.getElementById("notes"),a=document.getElementById("notesApp"),r=document.getElementById("auth");let s=localStorage.getItem("token");async function i(){try{const t=await fetch("http://127.0.0.1:5000/api/notes",{headers:{"x-auth-token":s}}),e=await t.json();o.innerHTML="",e.forEach(c)}catch(t){console.error("Error fetching notes:",t)}}function c(t){const e=document.createElement("div");e.classList.add("note"),e.style.backgroundColor=t.backgroundColor,e.innerHTML=`\n      <h3>${t.title}</h3>\n      <p>${t.content}</p>\n      <p><strong>Tags:</strong> ${t.tags.join(", ")}</p>\n      ${t.deletedAt?`\n        <button class="button btn-restore" onclick="restoreNote('${t._id}')">Restore</button>\n        <button class="button btn-delete-per" onclick="permanentlyDeleteNote('${t._id}')">Permanently Delete</button>`:`\n        <button class="button btn-archive" onclick="archiveNote('${t._id}', ${t.isArchived})">${t.isArchived?"Unarchive":"Archive"}</button>\n        <button class="button btn-delete" onclick="deleteNote('${t._id}')">Delete</button>`}\n    `,e.setAttribute("data-tags",t.tags.join(", ")),e.setAttribute("data-title",t.title),e.setAttribute("data-content",t.content),o.appendChild(e)}s&&(r.style.display="none",a.style.display="block",i()),t.addEventListener("submit",(async t=>{t.preventDefault();const e=document.getElementById("loginEmail").value,n=document.getElementById("loginPassword").value;try{const t=await fetch("http://127.0.0.1:5000/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:n})}),o=await t.json();o.token?(localStorage.setItem("token",o.token),s=o.token,r.style.display="none",a.style.display="block",i()):console.error("Login failed:",o.msg)}catch(t){console.error("Error logging in:",t)}})),e.addEventListener("submit",(async t=>{t.preventDefault();const e=document.getElementById("registerUsername").value,n=document.getElementById("registerEmail").value,o=document.getElementById("registerPassword").value;try{const t=await fetch("http://127.0.0.1:5000/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:n,password:o})}),c=await t.json();c.token?(localStorage.setItem("token",c.token),s=c.token,r.style.display="none",a.style.display="block",i()):console.error("Registration failed:",c.msg)}catch(t){console.error("Error registering:",t)}})),n.addEventListener("submit",(async t=>{t.preventDefault();const e=document.getElementById("noteTitle").value,o=document.getElementById("noteContent").value,a=document.getElementById("noteTags").value.split(",").map((t=>t.trim())),r=document.getElementById("noteColor").value;try{const t=await fetch("http://127.0.0.1:5000/api/notes/add",{method:"POST",headers:{"Content-Type":"application/json","x-auth-token":s},body:JSON.stringify({title:e,content:o,tags:a,backgroundColor:r})});c(await t.json()),n.reset()}catch(t){console.error("Error adding note:",t)}})),window.archiveNote=async(t,e)=>{try{const n=await fetch(`http://127.0.0.1:5000/api/notes/update/${t}`,{method:"PUT",headers:{"Content-Type":"application/json","x-auth-token":s},body:JSON.stringify({isArchived:!e})});await n.json()&&(o.innerHTML="",i())}catch(t){console.error("Error archiving note:",t)}},window.deleteNote=async t=>{try{const e=await fetch(`http://127.0.0.1:5000/api/notes/delete/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json","x-auth-token":s}});(await e.json()).msg&&(o.innerHTML="",i())}catch(t){console.error("Error deleting note:",t)}},window.restoreNote=async t=>{try{const e=await fetch(`http://127.0.0.1:5000/api/notes/restore/${t}`,{method:"PUT",headers:{"Content-Type":"application/json","x-auth-token":s}});await e.json()&&(o.innerHTML="",i())}catch(t){console.error("Error restoring note:",t)}},window.permanentlyDeleteNote=async t=>{try{const e=await fetch(`http://127.0.0.1:5000/api/notes/permanent-delete/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json","x-auth-token":s}});(await e.json()).msg&&(o.innerHTML="",i())}catch(t){console.error("Error permanently deleting note:",t)}},window.viewTrash=async()=>{try{const t=await fetch("http://127.0.0.1:5000/api/notes/trash",{headers:{"x-auth-token":s}}),e=await t.json();o.innerHTML="",e.forEach(c)}catch(t){console.error("Error fetching trash notes:",t)}},window.filterByLabel=()=>{const t=document.getElementById("labelInput").value.toLowerCase();document.querySelectorAll(".note").forEach((e=>{e.getAttribute("data-tags").toLowerCase().includes(t)?e.style.display="":e.style.display="none"}))},window.searchNotes=()=>{const t=document.getElementById("searchInput").value.toLowerCase();document.querySelectorAll(".note").forEach((e=>{const n=e.getAttribute("data-title").toLowerCase(),o=e.getAttribute("data-content").toLowerCase(),a=e.getAttribute("data-tags").toLowerCase();n.includes(t)||o.includes(t)||a.includes(t)?e.style.display="":e.style.display="none"}))},window.viewArchivedNotes=async()=>{try{const t=await fetch("http://127.0.0.1:5000/api/notes/archived",{headers:{"x-auth-token":s}}),e=await t.json();o.innerHTML="",e.forEach(c)}catch(t){console.error("Error fetching archived notes:",t)}},window.fetchNotes=i,window.logout=()=>{localStorage.removeItem("token"),s=null,r.style.display="block",a.style.display="none",o.innerHTML=""}}));